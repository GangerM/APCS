 public void keepOnlyBlue()
 {
     Pixel[][] pixels = this.getPixels2D();
     for (Pixel[] rowArray : pixels)
     {
       for (Pixel pixelObj : rowArray)
       {
         pixelObj.setRed(0);
        pixelObj.setGreen(0);
       }
     }
   }

   public void negate()
   {
     Pixel[][] pixels = this.getPixels2D();
     for (Pixel[] rowArray : pixels)
     {
      for (Pixel pixelObj : rowArray)
       {
         pixelObj.setRed(255 - pixelObj.getRed());
        pixelObj.setGreen(255 - pixelObj.getGreen());
         pixelObj.setBlue(255 - pixelObj.getBlue());
       }
     }
   }

   public void grayscale()
   {
     Pixel[][] pixels = this.getPixels2D();
     for (Pixel[] rowArray : pixels)
     {
       for (Pixel pixelObj : rowArray)
       {
         int average = (pixelObj.getRed() + pixelObj.getGreen() + pixelObj.getBlue()) / 3;
         pixelObj.setRed(average);
         pixelObj.setGreen(average);
         pixelObj.setBlue(average);
       }
     }
   }
 
   public void fixUnderwater()
   {
     Pixel[][] pixels = this.getPixels2D();
     for (Pixel[] rowArray : pixels)
     {
       for (Pixel pixelObj : rowArray)
       {
         int red = Math.abs(pixelObj.getRed() - 21);
         int green = Math.abs(pixelObj.getGreen() - 163);
         int blue = Math.abs(pixelObj.getBlue() - 173);
         
         // (R, G, B) is (21, 163, 173)
         int difference = red + green + blue;
         if (difference > 21) {
           pixelObj.setRed(0);
           pixelObj.setGreen(0);
           pixelObj.setBlue(0);
         }
       }
     }
   }
